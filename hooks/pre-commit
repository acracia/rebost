#!/usr/bin/env python3
"""
Forked from https://gist.github.com/810399
"""
from __future__ import with_statement, print_function
import os
import re
import shutil
import subprocess
import sys
import tempfile

# don't fill in both of these
select_codes = []
ignore_codes = ["E121", "E122", "E123", "E124", "E125", "E126", "E127", "E128",
                "E129", "E131", "E501"]


def system(*args, **kwargs):
    kwargs.setdefault('stdout', subprocess.PIPE)
    proc = subprocess.Popen(args, **kwargs)
    out, err = proc.communicate()
    return out


def main():
    modified = re.compile('^[AM]+\s+(?P<name>.*\.py)', re.MULTILINE)
    files = system('git', 'status', '--porcelain').decode("utf-8")
    files = modified.findall(files)

    tempdir = tempfile.mkdtemp()
    for name in files:
        filename = os.path.join(tempdir, name)
        filepath = os.path.dirname(filename)
        if not os.path.exists(filepath):
            os.makedirs(filepath)
        with open(filename, 'w') as f:
            system('git', 'show', ':' + name, stdout=f)

    if select_codes and ignore_codes:
        print(u'Error: select and ignore codes are mutually exclusive')
        sys.exit(1)
    elif select_codes:
        output = system(
            'pep8',
            '--statistics',
            '--select', ','.join(select_codes), '.', cwd=tempdir)
    elif ignore_codes:
        output = system(
            'pep8',
            '--statistics',
            '--ignore', ','.join(ignore_codes), '.', cwd=tempdir)
    else:
        output = system('pep8', '.', cwd=tempdir)
    shutil.rmtree(tempdir)
    if output:
        print(u'...efkin is angry again! PEP8 style violations have been detected. Please give\n'
              ' it a haircut or force the commit with "git commit --no-verify".\n')
        print(output.decode("utf-8"),)
        sys.exit(1)
    else:
        print('...no haircut needed...everything seems to be fine')

if __name__ == '__main__':
    main()